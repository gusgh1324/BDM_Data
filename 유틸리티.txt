파이썬 이미지 크롤링1
: https://inhovation97.tistory.com/33

파이썬 이미지 크롤링2
: https://intelloper.tistory.com/55

파이썬 이미지 크롤링3
: https://mvje.tistory.com/160

파이썬 이미지 크롤링4
: https://with-ahn-ssu.tistory.com/51

CNN 모델 활용 이미지 분류(tensorflow)
: https://analysisbugs.tistory.com/265

이미지 딥러닝
: https://velog.io/@eodud0582/cnn-ox-image-classification

이미지 딥러닝2
: https://www.tensorflow.org/tutorials/images/classification?hl=ko

이미지 딥러닝3
: https://github.com/boringariel/Tensorflow/blob/master/%ED%85%90%EC%84%9C%ED%94%8C%EB%A1%9C%EC%9A%B0%EB%A5%BC%20%EC%9D%B4%EC%9A%A9%ED%95%9C%20%EC%82%AC%EC%A7%84%20%EB%B6%84%EB%A5%98%20%EB%94%A5%EB%9F%AC%EB%8B%9D%20%EB%AA%A8%EB%8D%B8%20%EB%A7%8C%EB%93%A4%EA%B8%B0.ipynb

이미지 딥러닝(pytorch)
: https://97yong.github.io/dl%20code/imageclassification/

이미지 딥러닝(샴 네트워크)
: https://metar.tistory.com/entry/%EC%BD%94%EB%9E%A9%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%83%B4-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B5%AC%ED%98%84

이미지 딥러닝(Transfer Learning)
: https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html

이미지 딥러닝(샴 네트워크2)
: https://hipolarbear.tistory.com/25

이미지 딥러닝(Transfer Learning2)
: https://hangjastar.tistory.com/193

이미지 딥러닝(샴 네트워크3)
: https://jayhey.github.io/deep%20learning/2018/02/06/saimese_network/

이미지 딥러닝(샴 네트워크4)
: https://sorenbouma.github.io/blog/oneshot/

이미지 딥러닝(mete learning)
: https://kalelpark.tistory.com/29





전처리한 이미지 갯수를 측정하는 코드
# train_datagen 객체의 flow() 메서드를 호출하여 이미지 데이터를 생성
# batch_size는 한 번에 생성되는 이미지의 개수입니다.
# 여기서는 예시로 batch_size를 1로 설정하여 한 번에 한 장씩 생성하도록 합니다.
data_generator = train_datagen.flow_from_directory(
    train_dir,
    target_size=(150, 150),
    batch_size=1,
    class_mode=None,  # class_mode는 None으로 설정하여 이미지 데이터만 생성하도록 합니다.
    shuffle=False  # shuffle을 False로 설정하여 순서대로 이미지를 생성하도록 합니다.
)

# flow() 메서드를 호출하여 생성된 이미지 수를 확인
total_generated_images = 0
for _ in data_generator:
    total_generated_images += 1

print("전처리 과정마다 생성되는 이미지 수:", total_generated_images)
